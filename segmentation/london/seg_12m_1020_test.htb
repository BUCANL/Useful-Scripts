%diary 'seg_12m_rest_1sec_overlap_hanning_1020.log'

[path name ext] = fileparts('[batch_dfn]');
if ~strcmp(ext,'.set')
    logging_log('ERROR', sprintf('Wrong file format: %s should be .set',ext));
    exit(1);
end
logging_log('INFO', 'Loading set file: [batch_dfn]...');
EEG = pop_loadset('filename','[batch_dfn]','filepath','[batch_dfp]');
EEG = eeg_checkset( EEG );

EEG.subject = EEG.filename(6:8);

participants = tdfread('london_participants.tsv','\t');
p_ind = find(participants.participant_id==str2num(EEG.subject));

EEG.condition = num2str(participants.gender(p_ind));

if strcmp(EEG.filename(6),'6');
    if participants.outcome(p_ind)==3;
        EEG.group = 'asd';
    else;
        EEG.group = 'at-risk';
    end;
else;
    EEG.group = 'control';
end;

rest_inds = find(strcmpi('Rst0',{EEG.event.type}));
mov1_inds = find(strcmpi('mov1',{EEG.event.type}));
mov2_inds = find(strcmpi('mov2',{EEG.event.type}));
mov3_inds = find(strcmpi('mov3',{EEG.event.type}));
mov_inds = horzcat(mov1_inds,mov2_inds,mov3_inds);

if isempty(rest_inds);
    disp('SKIPPING [batch_dfn]: no Rst0 markers in dataset');
    return;
end;

end_inds = rest_inds+1;

eeg_inds = {};
for i=1:length(rest_inds);
    eeg_inds{i} = find(cell2mat({EEG.event.latency})==EEG.event(rest_inds(i)).latency);
    eeg_inds{i} = setdiff(eeg_inds{i},rest_inds);
    eeg_inds{i} = setdiff(eeg_inds{i},mov_inds);
end
eeg_inds = cell2mat(eeg_inds);

for i=1:length(end_inds);
    EEG.event(end+1).type = [EEG.event(eeg_inds(i)).type '_off'];
    if EEG.event(end_inds(i)).latency>EEG.event(eeg_inds(i)).latency;
        EEG.event(end).latency = EEG.event(end_inds(i)).latency;
    elseif strcmp(EEG.event(eeg_inds(i)).type,'eeg1') && EEG.pnts - EEG.event(eeg_inds(i)).latency > 22187;
        EEG.event(end).latency = EEG.event(eeg_inds(i)).latency + 22187;
    elseif strcmp(EEG.event(eeg_inds(i)).type,'eeg2') && EEG.pnts - EEG.event(eeg_inds(i)).latency > 20987;
        EEG.event(end).latency = EEG.event(eeg_inds(i)).latency + 20987;
    elseif strcmp(EEG.event(eeg_inds(i)).type,'eeg3') && EEG.pnts - EEG.event(eeg_inds(i)).latency > 16248;
       in EEG.event(end).latency = EEG.event(eeg_inds(i)).latency + 16248;        
    else;
        EEG.event(end).latency = EEG.pnts;
    end;
end    

% eeg1: woman singing nursery rhymes/ peek-a-boo ('s0ocial')
% eeg2: brightly coloured toys moving and producing sounds ('non-social')
% eeg3: same toys manipulated by human hand ('non-social')
EEG = pop_marks_event_gap(EEG,{'eeg1','eeg1_off'},[],'eeg1_rest',[1  0  0],'exact','on','ref_point','both','interval','on');
EEG = pop_marks_event_gap(EEG,{'eeg2','eeg2_off'},[],'eeg2_rest',[0  1  0],'exact','on','ref_point','both','interval','on');
EEG = pop_marks_event_gap(EEG,{'eeg3','eeg3_off'},[],'eeg3_rest',[0  0  1],'exact','on','ref_point','both','interval','on');

EEG = pop_marks_select_data(EEG,'channel marks',[],'labels',{'manual'},'remove','on');
EEG = pop_marks_select_data(EEG,'time marks',[],'labels',{'manual'},'remove','on');
EEG = pop_marks_select_data(EEG,'component marks',[],'labels',{'manual'},'remove','on');
EEG = eeg_checkset(EEG);
tmpEEG = EEG;

for type=1:3;
    EEG = pop_marks_select_data(tmpEEG,'time marks',[],'labels',{['eeg' num2str(type) '_rest']},'remove','off');
    EEG = eeg_checkset(EEG);
    EEG = marks_continuous2epochs(EEG,'recurrence',0.5,'limits',[-0.5 0.5],'keepboundary','on','eventtype','rest');

    EEG = warp_locs(EEG,'derivatives/lossless/code/misc/standard_1020_bucanl19.elc', ...
                        'transform',[0,0,0,0,0,-1.57,1,1,1],'manual','on');
    EEG = interp_mont( EEG,'derivatives/lossless/code/misc/standard_1020_bucanl19.elc','manual','on');

    %purge unnecessary fields...
    for i=1:length(EEG.marks.time_info);
        EEG.marks.time_info(i).flags=[];
    end
    EEG.data_sd_ep=[];
    EEG.c_data_sd_ep=[];
    EEG.data_sd_ch=[];
    EEG.c_data_sd_ch=[];
    EEG.m_neigbr_r_ch=[];
    EEG.c_neigbr_r_ch=[];
    EEG.m_neigbr_r_lat=[];
    EEG.c_neigbr_r_lat=[];
    EEG.amica=[];
    EEG.icaact_sd1_lat=[];
    EEG.c_icaact1_sd_lat=[];
    EEG.icaact_sd2_lat=[];
    EEG.c_icaact_sd2_lat=[];
    EEG.icaact_ta_lat=[];
    EEG.c_icaact_ta_lat=[];
    EEG.icaact_b_lat=[];
    EEG.c_icaact_b_lat=[];
    EEG.icaact = [];
    EEG.icawinv = [];
    EEG.icasphere = [];
    EEG.icaweights = [];
    EEG.icachansind = [];

    % resting task segmentation
    if EEG.trials>1;
        h=hanning(EEG.pnts);
        hr=repmat(h,1,EEG.trials);

        for i=1:size(EEG.data,1);
            d=squeeze(EEG.data(i,:,:));
            EEG.data(i,:,:)=d.*hr;
        end
        if isempty(EEG.event);
            EEG.event = struct('type','','latency',NaN,'urevent',[],'duration',0,'epoch',0);
        end
        EEG.session = type;
        EEG = pop_saveset( EEG, 'filename',['[batch_dfn,_,-1]_rest' num2str(type) '_seg.set']);
    else;
        disp('SKIPPING [batch_dfn]: No resting trials remaining.');
    end;
end;

