diary 'derivatives/lossless/diary/seg_resting_4sec_overlap_hanning.log'

logging_log('NOTICE', 'Starting seg script');

[path name ext] = fileparts('[batch_dfn]');
if ~strcmp(ext,'.set')
    logging_log('ERROR', sprintf('Wrong file format: %s should be .set',ext));
    exit(1);
end
logging_log('INFO', 'Loading set file: [batch_dfn]...');
EEG = pop_loadset('filename','[batch_dfn]','filepath','[batch_dfp]');
EEG = eeg_checkset( EEG );

% add STUDY variables

EEG.subject = EEG.filename(6:9);
EEG.session = str2num(EEG.filename(16:17));

EEG.condition = '';
EEG.group = '';

fid = fopen('boston_participants.csv','r');
rline = fgetl(fid);
while ischar(rline);
    splitline = strsplit(rline,',');
    subj = splitline(1);
    if strcmp(EEG.subject,subj);
        risk = splitline(2);
	    risk = str2num(risk{1});
	    outcome = splitline(3);
	    outcome = str2num(outcome{1});
	    gender = splitline(4);
   	    EEG.condition = gender{:};
	    if risk>1;
            if outcome==0;
	            EEG.group = 'control';
            else;
                EEG.group = 'con-asd';
            end;
	    elseif outcome==1;
	        EEG.group = 'asd';
	    else;
	        EEG.group = 'at-risk';
	    end;
    end;
    rline = fgetl(fid);
end;
fclose(fid);

if strcmp(EEG.group,'');
    EEG.group = 'NA';
end

if strcmp(EEG.condition,'');
    EEG.condition = 'NA';
end

% Removed flagged channels and time segments

EEG = pop_marks_select_data(EEG,'channel marks',[],'labels',{'manual'},'remove','on');
EEG = pop_marks_select_data(EEG,'time marks',[],'labels',{'manual'},'remove','on');
EEG = pop_marks_select_data(EEG,'component marks',[],'labels',{'manual'},'remove','on');
EEG = eeg_checkset( EEG );

% 4-sec, 50% overlapping windows
EEG = marks_continuous2epochs(EEG,'recurrence',2,'limits',[-2 2],'keepboundary','on','eventtype','rest');

sprintf('%s','Purging data...\n');
%purge unnecessary fields...
for i=1:length(EEG.marks.time_info);
    EEG.marks.time_info(i).flags=[];
end
EEG.data_sd_ep=[];
EEG.c_data_sd_ep=[];
EEG.data_sd_ch=[];
EEG.c_data_sd_ch=[];
EEG.m_neigbr_r_ch=[];
EEG.c_neigbr_r_ch=[];
EEG.m_neigbr_r_lat=[];
EEG.c_neigbr_r_lat=[];
EEG.amica=[];
EEG.icaact_sd1_lat=[];
EEG.c_icaact1_sd_lat=[];
EEG.icaact_sd2_lat=[];
EEG.c_icaact_sd2_lat=[];
EEG.icaact_ta_lat=[];
EEG.c_icaact_ta_lat=[];
EEG.icaact_b_lat=[];
EEG.c_icaact_b_lat=[];
EEG.icaact = [];
EEG.icawinv = [];
EEG.icasphere = [];
EEG.icaweights = [];
EEG.icachansind = [];

%% interpolate to the 19 channel 10/20 montage
EEG = warp_locs(EEG,'derivatives/lossless/code/misc/standard_1020_bucanl19.elc', ...
                    'transform',[0,0,0,0,0,-1.57,1,1,1],'manual','off');
EEG = interp_mont(EEG,'derivatives/lossless/code/misc/standard_1020_bucanl19.elc','manual','off');
EEG.chaninfo.nosedir = '+Y';
EEG = eeg_checkset(EEG);

%% interpolation to the 97 channel 10/20 montage
%EEG = warp_locs(EEG,'derivatives/lossless/code/misc/standard_1020.elc', ...
%                    'transform',[0 0 0 0 0 -1.57 1.08 1.08 1.08],'manual','off');
%EEG = interp_mont(EEG,'derivatives/lossless/code/misc/standard_1020.elc','manual','off');
%EEG.chaninfo.nosedir = '+Y';
%EEG = eeg_checkset(EEG);

%EEG = pop_eegfiltnew(EEG,[], 1,[],1,[],0);
%EEG = pop_eegfiltnew(EEG,[],30,[],0,[],0);

% downsample the data to 250hz
EEG = pop_resample( EEG, 250);

try;
    h=hanning(EEG.pnts);
    hr=repmat(h,1,EEG.trials);

    for i=1:size(EEG.data,1);
        d=squeeze(EEG.data(i,:,:));
        EEG.data(i,:,:)=d.*hr;
    end
    %if isempty(EEG.event);
    %    EEG.event = struct('type','','latency',NaN,'urevent',[],'duration',0,'epoch',0);
    %end
    EEG = pop_saveset( EEG, 'filename','[batch_dfn,_,-1]_seg.set');
catch;
    disp(['SKIPPING ' EEG.filename ': No segments remaining.']);
end;

